{"version":3,"file":"left-wrapper.umd.js","sources":["../src/left-wrapper.ts"],"sourcesContent":["/**\n * left-wrapper\n * 移动端左滑插件\n */\n\n// 定义事件\ntype EventString = 'touchStart' | 'touchMove' | 'touchEnd';\nenum TouchEventsName {\n    touchStart = 'touchstart',\n    touchMove = 'touchmove',\n    touchEnd = 'touchend'\n}\n\ninterface CssStyles {\n    [propName: string]: any;\n}\n\ninterface WrapperOpts {\n    slideWidth?: number;          // 左滑最大值\n    duration?: number;            // 滑动结束后动画持续时间\n}\n\ninterface Wrapper {\n    wrapper: HTMLElement | null;\n    leftSlide: HTMLElement | null;\n    rightSlide: HTMLElement | null;\n    touchStart: (e: TouchEvent | MouseEvent) => void;\n    touchMove: (e: TouchEvent | MouseEvent) => void;\n    touchEnd: (e: TouchEvent | MouseEvent) => void;\n}\n\n\nclass LeftWrapper implements Wrapper {\n    /**\n     * 获取滚动条高度\n     */\n    static getScrollTop = (): number => {\n        let scrollTop = 0;\n        if (document.documentElement && document.documentElement.scrollTop) {\n          scrollTop = document.documentElement.scrollTop;\n        } else if (document.body) {\n          scrollTop = document.body.scrollTop;\n        }\n        return scrollTop;\n    };\n\n    /**\n     * 设置滚动条高度\n     */\n    static setScrollTop = (scrollTop: number): void => {\n        document.body.scrollTop = scrollTop;\n        document.documentElement.scrollTop = scrollTop;\n    };\n\n    /**\n     * 设置样式\n     * @param element dom元素\n     * @param cssStyles 样式\n     */\n    static jsCss = (element: HTMLElement, cssStyles: CssStyles): void => {\n        const cssStyless = Object.keys(cssStyles);\n        if (cssStyless.length > 0) {\n            cssStyless.forEach((property) => {\n                const cssStyle = cssStyles[property];\n                element.style[property as any] = cssStyle;\n            });\n        }\n    };\n\n\n    wrapper: HTMLElement | null = null;                                 // 目标最外层\n    leftSlide: HTMLElement | null = null;                               // 左滑元素\n    rightSlide: HTMLElement | null = null;                              // 右边元素\n    bodyInitStyle: string = '';                                         // body元素初始样式\n    bodyDom: HTMLElement | null = document.querySelector('body');       // body元素\n    slideWidth: number = 0;                                             // 左滑移动的最大距离\n    slideX: number = 0;                                                 // 左滑移动的距离\n    transitionDuration: number = 300;                                   // 过渡时间\n\n    initStateData = {\n        target: null,                                                   // 目标元素\n        moveX: 0,                                                       // x轴移动的距离\n        startX: 0,                                                      // 开始移动时x坐标\n        endX: 0,                                                        // 结束移动时x坐标\n        moveY: 0,                                                       // y轴移动的距离\n        startY: 0,                                                      // 开始移动时y坐标\n        endY: 0,                                                        // 结束移动时y坐标\n        forbiddenScroll: false,                                         // 禁止页面滚动\n        forbiddenWrapper: false,                                        // 禁止左滑\n        isTrend: false,                                                 // 是否判断过趋势\n        fixedTop: 0                                                     // body固定时的top值\n    };\n\n    state = { ...this.initStateData };                                  // 移动过程中的状态\n\n    cssInitStyles = {                                                   // 需要用到的样式\n        overflow: {\n            overflow: 'hidden'\n        },\n        zIndex: {\n            zIndex: 1,\n        },\n        relative: {\n            position: 'relative'\n        },\n        absolute: {\n            position: 'absolute',\n            transform: 'translateX(0)'\n        },\n        fixed: {\n            position: 'fixed',\n            width: '100%'\n        }\n    };\n\n    constructor(wrapper: HTMLElement | null, opts: WrapperOpts = {}) {\n        if (!wrapper || !(wrapper instanceof HTMLElement)) {\n            console.error('Param wrapper must be HTMLElement');\n            return this;\n        }\n        this.wrapper = wrapper!;\n        this.leftSlide = this.wrapper.children[0] as HTMLElement;\n        this.rightSlide = this.wrapper.children[1] as HTMLElement;\n        this.bodyInitStyle = this.bodyDom!.getAttribute('style') || '';\n        this.slideWidth = opts.slideWidth || 0;\n        this.transitionDuration = opts.duration || 300;\n\n        // 初始化\n        this.initStyle();\n        this.initEventListener();\n    }\n\n    /**\n     * 初始化样式\n     */\n    initStyle = (): void => {\n        LeftWrapper.jsCss(this.wrapper!, { ...this.cssInitStyles.overflow, ...this.cssInitStyles.relative });\n        LeftWrapper.jsCss(this.leftSlide!, { ...this.cssInitStyles.absolute, ...this.cssInitStyles.zIndex });\n        LeftWrapper.jsCss(this.rightSlide!, { ...this.cssInitStyles.overflow, ...this.cssInitStyles.relative });\n    };\n\n\n    /**\n     * 初始化监听事件\n     */\n    initEventListener = (): void => {\n        if ('ontouchstart' in window) {\n            Object.keys(TouchEventsName).forEach((event) => {\n                this.leftSlide!.addEventListener(TouchEventsName[event as EventString], (e) => this[event as EventString](e), {\n                    capture: false\n                });\n            });\n        }\n    };\n\n    /**\n     * 阻止滚动, 允许左滑\n     */\n    stopScroll(): void {\n        this.state.forbiddenScroll = true;\n        this.state.fixedTop = LeftWrapper.getScrollTop();\n        const css = {\n            ...this.cssInitStyles.fixed,\n            top: `-${this.state.fixedTop}px`,\n        };\n        LeftWrapper.jsCss(this.bodyDom!, css);\n        this.state.forbiddenWrapper = false;\n    }\n    /**\n     * 允许滚动, 禁止左滑\n     */\n    allowScroll(): void {\n        this.state.forbiddenScroll = false;\n        this.bodyDom!.setAttribute('style', this.bodyInitStyle);\n        this.state.forbiddenWrapper = true;\n    }\n    /** 类型谓词\n     * 是否是移动事件\n     * @param e 事件对象\n     */\n    isTouch(e: TouchEvent | MouseEvent): e is TouchEvent {\n        return (e as TouchEvent).targetTouches !== undefined;\n    }\n    /**\n     * 是否有左滑的趋势\n     */\n    wrapperTrend(): boolean {\n        this.state.isTrend = true;\n        if (Math.abs(this.state.moveX) >= Math.abs(this.state.moveY)) {\n            // 有左滑的趋势\n            this.stopScroll();\n            return true;\n        } else {\n            this.allowScroll();\n            return false;\n        }\n    }\n    /**\n     * 开始移动\n     */\n    touchStart(e: TouchEvent | MouseEvent): void {\n        if (this.isTouch(e)) {\n            this.state.startX = e.targetTouches[0].pageX;\n            this.state.startY = e.targetTouches[0].pageY;\n        } else {\n            this.state.startX = e.pageX;\n            this.state.startY = e.pageY;\n        }\n    }\n    /**\n     * 移动中\n     */\n    touchMove(e: TouchEvent | MouseEvent): void {\n        if (this.state.forbiddenWrapper) {\n            // 禁止左滑\n            return;\n        }\n        let curerntX: number = 0;\n        let curerntY: number = 0;\n        if (this.isTouch(e)) {\n            curerntX = e.targetTouches[0].pageX;\n            curerntY = e.targetTouches[0].pageY;\n        } else {\n            curerntX = e.pageX;\n            curerntY = e.pageY;\n        }\n        this.state.moveX = curerntX - this.state.startX;\n        this.state.moveY = curerntY - this.state.startY;\n        if (!this.state.isTrend) {      // 是否判断过趋势，当没有判断过\n            if (!this.wrapperTrend()) { // 没有左滑的趋势，可以滚动，不能左滑\n                return;\n            }\n        }\n        this.moveSlideX(this.state.moveX);\n        this.state.startX = curerntX;\n        this.state.startY = curerntY;\n    }\n    /**\n     * 移动结束\n     */\n    touchEnd(e: TouchEvent | MouseEvent): void {\n        const absMoveX = Math.abs(this.slideX);\n        const halfSlide = this.slideWidth / 2;\n        if (absMoveX >= halfSlide) {\n            // 两种情况\n            // 当前x轴位置大于设置距离的一半，则将当前x轴位置变成设置距离\n            // this.state.moveX > 0表示右滑，右滑则将slideX直接变为0\n            this.slideX = this.state.moveX > 0 ? 0 : -this.slideWidth;\n        } else {\n            this.slideX = 0;\n        }\n        this.transitionX();\n        this.resetWrapperState();\n    }\n    /**\n     * 移动中设置滑动的x轴位置slideX\n     * @param x 滑动的距离(moveX)\n     */\n    moveSlideX(x: number): void {\n        let translateX = this.slideX + x;\n        this.slideX = translateX >= 0 ? 0 : Math.abs(translateX) >= this.slideWidth ? -this.slideWidth : translateX;\n        this.doTranslateX();\n    }\n    /**\n     * 过渡效果改变translateX\n     */\n    transitionX(): void {\n        LeftWrapper.jsCss(this.leftSlide!, {\n            transitionDuration: `${this.transitionDuration}ms`,\n            transform: `translateX(${this.slideX}px)`\n        });\n    }\n    /**\n     * 改变translateX实现滑动\n     */\n    doTranslateX(): void {\n        LeftWrapper.jsCss(this.leftSlide!, {\n            transitionDuration: '0ms',\n            transform: `translateX(${this.slideX}px)`\n        });\n    }\n    /**\n     * 每次滑动结束后，重置状态\n     */\n    resetWrapperState(): void {\n        this.bodyDom!.setAttribute('style', this.bodyInitStyle);\n        if (this.state.fixedTop > 0) {\n            // 如果固定body前滚动条有高度，则定位到相应位置\n            LeftWrapper.setScrollTop(this.state.fixedTop);\n        }\n        this.state = { ...this.initStateData };\n    }\n}\nexport default LeftWrapper"],"names":[],"mappings":"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"}